using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.AI;

public class customerMove : MonoBehaviour
{


    public float timeLeft;
    public Transform target3;
    public Transform target2;
    public Transform target;
    public bool go = true;
    public bool angry = false;
    public bool happy = false;

    public Transform exit;
    NavMeshAgent agent;
    public Transform gohere;
    public GameObject request;
    public float level;
    public int levelreq;
    Rigidbody cbody;
    bool reset = true;
    public float resetter;
    public moveGadget editspeed;
    public order od;
    // Use this for initialization
    void Start()
    {
        cbody = GetComponent<Rigidbody>();
        agent = GetComponent<NavMeshAgent>();
        agent.updateRotation = false;
        level = 0;
        resetter = 3;
        request = GameObject.Find("CustomerRequest");
        od = GetComponent<order>();
        levelreq = 1;
      //  go = true;
    }

    // Update is called once per frame
    void Update()
    {
        od.timeout = true;
        //if the player reaches the level threshold it advances a level
        if (levelreq == 0) {
            increaseLevel();
        }
        
        //resets the customer movemenet upon reaching the exit position
        if (reset == true)
        {
            timeLeft = 30 -(2 + level);
            angry = false;
            happy = false;
            chooseSpace();
            agent.SetDestination(gohere.position);
            reset = false;
        }

        if (reset == false)
        {
          
                timeLeft -= Time.deltaTime;
           
        }
        //if timer is 
        if (timeLeft <= 0)
        {
            angry = true;
           
            if (angry == true)
            {
                Debug.Log("Customer is pissed");
                gohere = exit;
                agent.SetDestination(gohere.position);
               
                resetter -= Time.deltaTime;
                if (resetter <= 0)
                {
                    od.loseHealth();
                    resetter = 3;
                    reset = true;
                    angry = false;
                    order.orderReceived = false;

                    request.GetComponent<CustomerRequest>().ClearRequest();
                    request.GetComponent<CustomerRequest>().ChooseObject();
                    request.GetComponent<CustomerRequest>().ChooseColor(6);
                    
                    
                }
            }

           
        }
        //if order is correct and timer did not run out it will successfuly increase the level requirement threshhold by decrementing levelreq variable
        if (order.orderReceived)
        {
            Debug.Log("Customer got his stuff");
            happy = true;
            if (happy == true)
            {

                gohere = exit;
                agent.SetDestination(gohere.position);

                resetter -= Time.deltaTime;
                if (resetter <= 0)
                {
                    resetter = 3;
                    reset = true;
                    happy = false;
                    order.orderReceived = false;

                    request.GetComponent<CustomerRequest>().ClearRequest();
                    request.GetComponent<CustomerRequest>().ChooseObject();
                    request.GetComponent<CustomerRequest>().ChooseColor(6);

                    levelreq--;
                }


            }
        }

    }

    //customer moves to a random spot generated by a random generator
    void chooseSpace()
    {
        System.Random ran = new System.Random();

        int i = ran.Next(0, 3);

        if (i == 0)
        {
            gohere = target;
            Debug.Log("i is 0");
        }
        else if (i == 1)
        {
            gohere = target2;
            Debug.Log("i is 1");
        }
        else if (i == 2)
        {

            gohere = target3;
            Debug.Log("i is 2");
        }

    }

    //increases level
    void increaseLevel() {
        levelreq = 1;
        level++;
        editspeed.step = Time.deltaTime * (3 + level);
        agent.speed = 3.5f + level;

    }


}
